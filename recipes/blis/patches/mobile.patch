--- a/blis/_src/frame/thread/bli_pthread.c
+++ b/blis/_src/frame/thread/bli_pthread.c
@@ -594,7 +594,7 @@ int bli_pthread_barrier_wait
        return 0;
 }
 
-#elif defined(__APPLE__) || defined(_MSC_VER) // !defined(BLIS_DISABLE_SYSTEM)
+#elif defined(__APPLE__) || defined(_MSC_VER) || defined(__ANDROID__) // !defined(BLIS_DISABLE_SYSTEM)
 
 #include <errno.h>
 
diff --git a/blis/_src/include/linux-generic/blis.h b/blis/_src/include/linux-generic/blis.h
index d5158ff..bf3fbe5 100644
--- a/blis/_src/include/linux-generic/blis.h
+++ b/blis/_src/include/linux-generic/blis.h
@@ -1581,7 +1581,7 @@ typedef pthread_cond_t      bli_pthread_cond_t;
 typedef pthread_condattr_t  bli_pthread_condattr_t;
 typedef pthread_once_t      bli_pthread_once_t;
 
-#if defined(__APPLE__)
+#if defined(__APPLE__) || defined(__ANDROID__)
 
 // For OS X, we must define the barrier types ourselves since Apple does
 // not implement barriers in their variant of pthreads.
diff --git a/setup.py b/setup.py
index 332cab3..bdd673e 100644
--- a/setup.py
+++ b/setup.py
@@ -37,6 +37,10 @@ PLATFORM_TO_ARCH = {
 
 MOD_NAMES = ["blis.cy", "blis.py"]
 
+# Redirect the compiler to CC
+os.environ["BLIS_ARCH"] = "generic"
+os.environ["BLIS_COMPILER"] = os.environ["CC"]
+
 print("BLIS_COMPILER?", os.environ.get("BLIS_COMPILER", "None"))
image: macos-monterey

skip_branch_with_pr: true

environment:
  PYTHON_VERSION: 3.12.3
  PYTHON_SHORT_VERSION: 3.12
  CF_ACCESS_KEY_ID:
    secure: +m1fzbrEPRecXKCCMn4uA781PAASzJSWAxuJj1c7ctLfWbi5oW4PMnowPK96XtQ5
  CF_SECRET_ACCESS_KEY:
    secure: siQTjK+IAmy+zcTSO0d/dnyU/SHC52+gaW8xOT3GFqW8dyRAWr7YXtCU0QvlIC5MFVnbEmgDcDKqINaWN1iD5Cuuw/QAFsF1L/zDnQSvAtE=
  CF_ENDPOINT_URL:
    secure: lSQBfrqIXIOAYhA0NGej7Pfll1wOSKTTFwQCl8N8lvI22uI5CA/UjRKaqw6KlIZMcXvqTP1w11CVqC2CWnyM3hK857X2tAe8nkO8KT0DCzw=
  CF_BUCKET_NAME: flet-simple

  matrix:
    - job_name: Build Android packages
      job_group: build_android

    - job_name: Build iOS packages
      job_group: build_ios

    # - job_name: Re-build Simple index
    #   job_group: rebuild_index
    #   job_depends_on: build_android, build_ios

stack:
- python $PYTHON_SHORT_VERSION

on_success:
- sh: |
    if test -d logs; then
      find logs -type f -iname *.log -exec appveyor PushArtifact {} \;
    fi

on_failure:
- sh: |
    if test -d errors; then
      find errors -type f -iname *.log -exec appveyor PushArtifact {} \;
    fi

for:
  # ======================================
  #      Build Android packages
  # ======================================

  - matrix:
      only:
        - job_group: build_android

    environment:
      APPVEYOR_BUILD_WORKER_IMAGE: ubuntu-gce-c
      NDK_VERSION: r26d

    install:
      # use python-mobile repo to build Python for Android
      - git clone -q --branch=main https://github.com/flet-dev/python-mobile.git
      - pushd python-mobile
      - ./build-all.sh $PYTHON_VERSION
      - popd

      # configure forge
      - export PYTHON_ANDROID_SUPPORT=$(realpath ./python-mobile)
      - source ./setup.sh $PYTHON_VERSION

      # install Rust
      - curl https://sh.rustup.rs -sSf | sh -s -- -y
      - . "$HOME/.cargo/env"
      - export PATH="$PATH:$HOME/.cargo/bin"
      - rustup target add aarch64-linux-android

      #- ./ci/package-python-for-android.sh python-mobile/install $PYTHON_VERSION $ANDROID_ABI
      #- find dist -type f -iname *.tar.gz -exec appveyor PushArtifact -DeploymentName python-dist-android {} \;

    build_script:

      # libs
      - forge android libjpeg:3.0.1
      - forge android libpng:1.6.43
      - forge android freetype:2.13.2

      # # packages
      - forge android pillow:10.3.0
      - forge android bcrypt:4.1.3
      # - forge android aiohttp:3.9.5
      # - forge android bitarray:2.9.2
      # - forge android brotli:1.1.0
      # - forge android lru-dict:1.3.0
      # - forge android cffi:1.16.0
      # - forge android argon2-cffi-bindings:21.2.0
      # - forge android yarl:1.9.4

      # cleanup
      - rm dist/ninja-*
      - rm dist/bzip2-*
      - rm dist/xz-*
      - rm dist/libffi-*
      - rm dist/openssl-*

    deploy_script:
      - pip install boto3
      - python .ci/publish-wheels.py dist

    test: off

  # ======================================
  #      Build Python for iOS
  # ======================================

  - matrix:
      only:
        - job_group: build_ios

    environment:
      APPVEYOR_BUILD_WORKER_IMAGE: macos-sonoma

    install:
      - git clone -q --branch=$PYTHON_VERSION https://github.com/flet-dev/Python-Apple-support
      - pushd Python-Apple-support
      - make iOS
      - popd

      # install Rust
      - curl https://sh.rustup.rs -sSf | sh -s -- -y
      - . "$HOME/.cargo/env"
      - export PATH="$PATH:$HOME/.cargo/bin"
      - rustup target add aarch64-apple-darwin

      # configure forge
      - export PYTHON_APPLE_SUPPORT=$(realpath ./Python-Apple-support)
      - source ./setup.sh $PYTHON_VERSION

      #- ./ci/package-python-for-ios.sh Python-Apple-support $PYTHON_VERSION
      #- find dist -type f -iname *.tar.gz -exec appveyor PushArtifact -DeploymentName python-dist-ios {} \;
      - export PATH="$PATH:$HOME/.cargo/bin"

    build_script:

      # libs
      - forge iOS libjpeg:3.0.1
      - forge iOS libpng:1.6.43
      - forge iOS freetype:2.13.2

      # packages
      - forge iOS pillow:10.3.0
      - echo $PATH
      - forge iOS bcrypt:4.1.3
      # - forge iOS aiohttp:3.9.5
      # - forge iOS bitarray:2.9.2
      # - forge iOS brotli:1.1.0
      # - forge iOS lru-dict:1.3.0
      # - forge iOS cffi:1.16.0
      # - forge iOS argon2-cffi-bindings:21.2.0
      # - forge iOS yarl:1.9.4

      # cleanup
      - rm dist/ninja-*
      - rm dist/bzip2-*
      - rm dist/xz-*
      - rm dist/libffi-*
      - rm dist/openssl-*

    deploy_script:
      - pip install boto3
      - python .ci/publish-wheels.py dist

    test: off

  # ======================================
  #      Rebuild Simple index
  # ======================================

  - matrix:
      only:
        - job_group: rebuild_index

    environment:
      APPVEYOR_BUILD_WORKER_IMAGE: ubuntu

    deploy_script:
      - pip3 install boto3
      - python .ci/rebuild-simple-index.py

    test: off

image: macos-monterey

skip_branch_with_pr: true

environment:
  PYTHON_VERSION: 3.12.4
  PYTHON_SHORT_VERSION: 3.12
  CF_ACCESS_KEY_ID:
    secure: +m1fzbrEPRecXKCCMn4uA781PAASzJSWAxuJj1c7ctLfWbi5oW4PMnowPK96XtQ5
  CF_SECRET_ACCESS_KEY:
    secure: siQTjK+IAmy+zcTSO0d/dnyU/SHC52+gaW8xOT3GFqW8dyRAWr7YXtCU0QvlIC5MFVnbEmgDcDKqINaWN1iD5Cuuw/QAFsF1L/zDnQSvAtE=
  CF_ENDPOINT_URL:
    secure: lSQBfrqIXIOAYhA0NGej7Pfll1wOSKTTFwQCl8N8lvI22uI5CA/UjRKaqw6KlIZMcXvqTP1w11CVqC2CWnyM3hK857X2tAe8nkO8KT0DCzw=
  CF_BUCKET_NAME: flet-simple

  matrix:
    # - job_name: 'Android: websockets'
    #   job_group: build_android
    #   FORGE_ARCH: android
    #   FORGE_PACKAGES: >-
    #     websockets:13.0.1

    # - job_name: 'Android: pillow'
    #   job_group: build_android
    #   FORGE_ARCH: 'android:arm64-v8a'
    #   FORGE_PACKAGES: >-
    #     libjpeg:3.0.3
    #     libpng:1.6.43
    #     freetype:2.13.3
    #     pillow:10.4.0

    # - job_name: 'iOS: websockets'
    #   job_group: build_ios
    #   FORGE_ARCH: iOS
    #   FORGE_PACKAGES: >-
    #     websockets:13.0.1

    # ==================================================

    - job_name: 'Android arm64-v8a: opencv-python'
      job_group: build_android
      FORGE_ARCH: 'android:arm64-v8a'
      FORGE_PACKAGES: numpy:2.1.1 opencv-python:4.10.0.84

    - job_name: 'Android armeabi-v7a: opencv-python'
      job_group: build_android
      FORGE_ARCH: 'android:armeabi-v7a'
      FORGE_PACKAGES: numpy:2.1.1 opencv-python:4.10.0.84

    - job_name: 'Android x86_64: opencv-python'
      job_group: build_android
      FORGE_ARCH: 'android:x86_64'
      FORGE_PACKAGES: numpy:2.1.1 opencv-python:4.10.0.84

    - job_name: 'Android x86: opencv-python'
      job_group: build_android
      FORGE_ARCH: 'android:x86'
      FORGE_PACKAGES: numpy:2.1.1 opencv-python:4.10.0.84

    # - job_name: 'iOS iphone arm64: opencv-python'
    #   job_group: build_ios
    #   FORGE_ARCH: 'iphoneos:arm64'
    #   FORGE_PACKAGES: numpy:2.1.1 opencv-python:4.10.0.84

    # - job_name: 'iOS simulator arm64: opencv-python'
    #   job_group: build_ios
    #   FORGE_ARCH: 'iphonesimulator:arm64'
    #   FORGE_PACKAGES: numpy:2.1.1 opencv-python:4.10.0.84

    # - job_name: 'iOS simulator x86_64: opencv-python'
    #   job_group: build_ios
    #   FORGE_ARCH: 'iphonesimulator:x86_64'
    #   FORGE_PACKAGES: numpy:2.1.1 opencv-python:4.10.0.84

    - job_name: 'Android: pydantic-core, pillow, lru-dict, contourpy, kiwisolver, aiohttp, bitarray, argon2-cffi-binding, bcrypt, cryptography, brotli, websockets'
      job_group: build_android
      FORGE_ARCH: android
      FORGE_PACKAGES: >-
        cffi:1.17.1
        libjpeg:3.0.3
        libpng:1.6.43
        freetype:2.13.3
        pillow:10.4.0
        lru-dict:1.3.0
        yarl:1.11.1
        contourpy:1.3.0
        kiwisolver:1.4.7
        aiohttp:3.9.5
        bitarray:2.9.2
        argon2-cffi-bindings:21.2.0
        bcrypt:4.2.0
        cryptography:43.0.1
        brotli:1.1.0
        pydantic-core:2.23.3
        websockets:13.0.1

    - job_name: 'Android: numpy, matplotlib, pandas, blis'
      job_group: build_android
      FORGE_ARCH: android
      FORGE_PACKAGES: >-
        numpy:1.26.4
        numpy:2.1.1
        matplotlib:3.9.2
        pandas:2.2.2
        blis:1.0.0

    # - job_name: 'iOS: pillow, lru-dict, yarl, contourpy, kiwisolver, aiohttp, bitarray, websockets'
    #   job_group: build_ios
    #   FORGE_ARCH: iOS
    #   FORGE_PACKAGES: >-
    #     libjpeg:3.0.3
    #     libpng:1.6.43
    #     freetype:2.13.3
    #     pillow:10.4.0
    #     lru-dict:1.3.0
    #     yarl:1.11.1
    #     contourpy:1.3.0
    #     kiwisolver:1.4.7
    #     aiohttp:3.9.5
    #     bitarray:2.9.2
    #     websockets:13.0.1

    # - job_name: 'iOS: cffi, argon2-cffi-bindings, bcrypt, cryptography, brotli'
    #   job_group: build_ios
    #   FORGE_ARCH: iOS
    #   FORGE_PACKAGES:  >-
    #     cffi:1.17.1
    #     argon2-cffi-bindings:21.2.0
    #     bcrypt:4.2.0
    #     cryptography:43.0.1
    #     brotli:1.1.0

    # - job_name: 'iOS: pydantic-core'
    #   job_group: build_ios
    #   FORGE_ARCH: iOS
    #   FORGE_PACKAGES: >-
    #     pydantic-core:2.23.3

    # - job_name: 'iOS: numpy, matplotlib, pandas, blis'
    #   job_group: build_ios
    #   FORGE_ARCH: iOS
    #   FORGE_PACKAGES: >-
    #     numpy:1.26.4
    #     numpy:2.1.1
    #     matplotlib:3.9.2
    #     pandas:2.2.2
    #     blis:1.0.0

    - job_name: Re-build Simple index
      job_group: rebuild_index
      job_depends_on: build_android, build_ios

stack:
- python $PYTHON_SHORT_VERSION

on_success:
- sh: |
    if test -d logs; then
      find logs -type f -iname *.log -exec appveyor PushArtifact {} \;
    fi

on_failure:
- sh: |
    if test -d errors; then
      find errors -type f -iname *.log -exec appveyor PushArtifact {} \;
    fi

for:
  # ======================================
  #      Build Android packages
  # ======================================

  - matrix:
      only:
        - job_group: build_android

    environment:
      APPVEYOR_BUILD_WORKER_IMAGE: ubuntu-gce-c
      NDK_VERSION: r27

    install:
      # download Python for Android
      - python_android_dir=$HOME/projects/python-android
      - curl -#OL https://github.com/flet-dev/python-android/releases/download/v${PYTHON_SHORT_VERSION}/python-android-install-${PYTHON_SHORT_VERSION}.tar.gz
      - mkdir -p $python_android_dir
      - tar -xzf python-android-install-${PYTHON_SHORT_VERSION}.tar.gz -C $python_android_dir

      # install Android NDK
      - .ci/install_ndk.sh

      # install Rust
      - curl https://sh.rustup.rs -sSf | sh -s -- -y
      - . "$HOME/.cargo/env"
      - export PATH="$PATH:$HOME/.cargo/bin"
      - rustup target add aarch64-linux-android
      - rustup target add arm-linux-androideabi
      - rustup target add x86_64-linux-android
      - rustup target add i686-linux-android
      
      # configure forge
      - export MOBILE_FORGE_ANDROID_SUPPORT_PATH=$python_android_dir
      - source ./setup.sh $PYTHON_VERSION

    build_script:
      - sh: |
          IFS=' ' read -r -a packages <<< "$FORGE_PACKAGES"
          for package in "${packages[@]}"; do
              forge $FORGE_ARCH $package || exit 1
          done

      # cleanup
      - rm dist/bzip2-*
      - rm dist/xz-*
      - rm dist/libffi-*
      - rm dist/openssl-*

    deploy_script:
      - pip install boto3
      - python .ci/publish-wheels.py dist

    test: off

  # ======================================
  #      Build iOS packages
  # ======================================

  - matrix:
      only:
        - job_group: build_ios

    environment:
      APPVEYOR_BUILD_WORKER_IMAGE: macos-sonoma

    install:
      # download Python for iOS
      - python_ios_dir=$HOME/projects/python-darwin/Python-Apple-support
      - curl -#OL https://github.com/flet-dev/python-ios/releases/download/v${PYTHON_SHORT_VERSION}/python-ios-install-${PYTHON_SHORT_VERSION}.tar.gz
      - mkdir -p $python_ios_dir
      - tar -xzf python-ios-install-${PYTHON_SHORT_VERSION}.tar.gz -C $python_ios_dir

      # install Rust
      - curl https://sh.rustup.rs -sSf | sh -s -- -y
      - . "$HOME/.cargo/env"
      - export PATH="$PATH:$HOME/.cargo/bin"
      - rustup target add aarch64-apple-ios
      - rustup target add aarch64-apple-ios-sim
      - rustup target add x86_64-apple-ios

      # configure forge
      - export MOBILE_FORGE_IOS_SUPPORT_PATH=$python_ios_dir
      - source ./setup.sh $PYTHON_VERSION

      # refresh PATH
      - export PATH="$PATH:$HOME/.cargo/bin"

    build_script:
      - sh: |
          IFS=' ' read -r -a packages <<< "$FORGE_PACKAGES"
          for package in "${packages[@]}"; do
              forge $FORGE_ARCH $package || exit 1
          done

      # cleanup
      - rm dist/bzip2-*
      - rm dist/xz-*
      - rm dist/libffi-*
      - rm dist/openssl-*

    deploy_script:
      - pip install boto3
      - python .ci/publish-wheels.py dist

    test: off

  # ======================================
  #      Rebuild Simple index
  # ======================================

  - matrix:
      only:
        - job_group: rebuild_index

    environment:
      APPVEYOR_BUILD_WORKER_IMAGE: ubuntu

    deploy_script:
      - python -m ensurepip --upgrade
      - pip3 install --upgrade setuptools
      - pip3 install boto3
      - python .ci/rebuild-simple-index.py

    test: off
